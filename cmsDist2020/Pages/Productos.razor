@page "/productos"
@inject cmsDist2020.Data.AppData AppData
@using cmsDist2020.Models
@inject cmsDist2020.Service.ProductService productService
@inject NavigationManager navigationManager

<h3>Lista de Productos</h3>
<p>Bienvenido: @AppData.Nombre</p>
@if (product_model == null)
{
    <img src="./Img/cargando.gif" />
}
else
{
    <MatTable Items="@product_model" Class="align-self-stretch" Striped="true" ShowFooter="false" ShowPaging="true" PageSize=10>
        <MatTableHeader>
            <th>Acciones</th>
            <th>Producto</th>
            <th>Cantidad</th>
            <th>Registrado</th>
            <th>C Pin</th>
            <th>C Pin Anulado</th>
            @*<th>Acción</th>*@
        </MatTableHeader>
        <MatTableRow>
            <td>
                <MatButton Raised="true" OnClick="@(() => ListaContratos(@context.Cod))">Lista de Contratos</MatButton>
                @*<a class="btn btn-primary" href='/contratos/@context.Cod'><i class="icon-comment"></i> Detalle de Contratos</a>*@
            </td>
            <td>@context.Producto</td>
            <td>@context.Cantidad</td>
            <td>@context.Registrado</td>
            <td>@context.C_Pin</td>
            <td>@context.C_Pin_Anulado</td>
            @*<td>@context.Cod</td>*@
        </MatTableRow>
    </MatTable>
}

@code {
    IEnumerable<ProductModel> product_model;
    string _error_ = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            product_model = await productService.Get_Products(AppData.Id);
        }
        catch (Exception ex)
        {
            _error_ = ex.Message;
        }
        finally
        {
            Console.WriteLine("Ejecutando");
        }
    }

    private void ListaContratos(int idProdcuct)
    {
        navigationManager.NavigateTo("contratos/" + idProdcuct.ToString() );
    }
}
