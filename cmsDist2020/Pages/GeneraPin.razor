@*page "/generaPin/{ProductoId:int}/{Id:int}/{Tipo:int}"*@
@page "/generaPin"
@inject cmsDist2020.Data.AppData AppData
@using cmsDist2020.Models
@inject cmsDist2020.Service.ClientesService clientesService
@inject NavigationManager navigationManager
@using cmsDist2020.Helpers;

<h3>ACCIONES DEL CÓDIGO PIN</h3>
@if (productosModels == null)
{
    <img src="./Img/cargando.gif" />
}
else
{
    <EditForm Model="productosModels" OnSubmit="CrearNumeroPIN">
        <div class="form-row">
            <div class="form-group col-md-10">
                <div class="form-group">
                    <label>Nombre del Cliente</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.Cliente" />
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-10">
                <div class="form-group">
                    <label>Dirección</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.Direccion" />
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-5">
                <div class="form-group">
                    <label>Correo del Cliente:</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.Correo01" />
                    </div>
                </div>
            </div>
            <div class="form-group col-md-5">
                <div class="form-group">
                    <label>Producto:</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.Producto" />
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-10">
                <div class="form-group">
                    <label>Nombre del Colaborador:</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.Colaborador" />
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-2">
                <div class="form-group">
                    <label>N° de Contrato:</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.NroContrato" />
                    </div>
                </div>
            </div>
            <div class="form-group col-md-2">
                <div class="form-group">
                    <label>N° PIN:</label>
                    <div>
                        <InputText class="form-control" disabled="True" @bind-Value="@productosModels.NroPin" />
                    </div>
                </div>
            </div>
        </div>
        @*<button class="btn btn-success" type="submit">Generar N° PIN</button>
            <button class="btn btn-secondary" type="submit">Generar N° PIN</button>*@
        @if (productosModels.NroPin == "")
        {
            <MatButton Disabled="false" Raised="true" type="submit" name="action">GENERAR N° PIN</MatButton>
            <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(0))">ENVIAR POR COREEO</MatButton>
            <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(1))">HABILITAR</MatButton>
            <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(2))">DESABILITAR</MatButton>
            <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(3))">DESVINCULAR</MatButton>
        }
        else
        {
            <MatButton Disabled="true" Raised="true" type="submit" name="action">GENERAR N° PIN</MatButton>
            @if (productosModels.EstadoPin == "1")
            {
                <MatButton Disabled="false" Raised="true" OnClick="(() => AccionesPIN(0))">ENVIAR POR COREEO</MatButton>
                <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(1))">HABILITAR</MatButton>
                <MatButton Disabled="false" Raised="true" OnClick="(() => AccionesPIN(2))">DESABILITAR</MatButton>
                @if (productosModels.MAC_ADDRESS == "")
                {
                    <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(3))">DESVINCULAR</MatButton>
                }
                else
                {
                    <MatButton Disabled="false" Raised="true" OnClick="(() => AccionesPIN(3))">DESVINCULAR</MatButton>
                }
            }
            else
            {
                <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(0))">ENVIAR POR COREEO</MatButton>
                <MatButton Disabled="false" Raised="true" OnClick="(() => AccionesPIN(1))">HABILITAR</MatButton>
                <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(2))">DESABILITAR</MatButton>
                <MatButton Disabled="true" Raised="true" OnClick="(() => AccionesPIN(3))">DESVINCULAR</MatButton>
            }
        }
        <MatButton Raised="true" OnClick="@retornar">CANCELAR</MatButton>
    </EditForm>

    <MatDialog @bind-IsOpen="@dialogIsOpen">
        <MatDialogTitle>@name</MatDialogTitle>
        <MatDialogActions>
            <MatButton OnClick="@(e => { dialogIsOpen = false; })"> OK </MatButton>
        </MatDialogActions>
    </MatDialog>
}

@code {
    //[Parameter] public int ProductoId { get; set; }
    //[Parameter] public int Id { get; set; }
    //[Parameter] public int Tipo { get; set; }

    //    AppData.ContratoId = Convert.ToDouble(idContrato);
    //    AppData.ProductoId = Convert.ToDouble(ProductoId);

    ProductosModel productosModels = new ProductosModel();
    string _error_ = "";
    bool dialogIsOpen = false;
    string name = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productosModels = await clientesService.GetProductoId(AppData.ProductoId, AppData.Id, AppData.ContratoId);
        }
        catch (Exception ex)
        {
            _error_ = ex.Message;
        }
        finally
        {
            Console.WriteLine("Ejecutando");
        }
    }

    void CrearNumeroPIN()
    {
        string GENERA_PIN = "";
        DateTime FECHA_FINAL = System.DateTime.Now;
        string TipoUsuario = "";
        string PassTipoUsuario = "";
        string TipoUsuarioWeb = "";
        string PassTipoUsuarioWeb = "";
        string TipoUsuarioApp = "";
        string PassTipoUsuarioApp = "";
        string usrInfocontable = "";
        string passInfocontable = "";
        string usrebookweb = "";
        string passebookweb = "";
        string idProductos = "";
        string DETALLE_FAMILIA = "";
        bool Saved = false;
        try
        {

            System.Data.DataTable dt_ = new System.Data.DataTable();
            dt_ = clientesService.paLeeTipoProducto(AppData.ProductoId).Tables[0];
            if (dt_.Rows.Count > 0)
            {
                GENERA_PIN = dt_.Rows[0]["GENERA_PIN"].ToString();
                FECHA_FINAL = Convert.ToDateTime(dt_.Rows[0]["FECHA_FINAL"].ToString());
                TipoUsuario = dt_.Rows[0]["TipoUsuario"].ToString();
                PassTipoUsuario = dt_.Rows[0]["PassTipoUsuario"].ToString();
                TipoUsuarioWeb = dt_.Rows[0]["TipoUsuarioWeb"].ToString();
                PassTipoUsuarioWeb = dt_.Rows[0]["PassTipoUsuarioWeb"].ToString();
                TipoUsuarioApp = dt_.Rows[0]["TipoUsuarioApp"].ToString();
                PassTipoUsuarioApp = dt_.Rows[0]["PassTipoUsuarioApp"].ToString();
                usrInfocontable = dt_.Rows[0]["usrInfocontable"].ToString();
                passInfocontable = dt_.Rows[0]["passInfocontable"].ToString();
                usrebookweb = dt_.Rows[0]["usrebookweb"].ToString();
                passebookweb = dt_.Rows[0]["passebookweb"].ToString();
                idProductos = dt_.Rows[0]["idProductos"].ToString();
                DETALLE_FAMILIA = dt_.Rows[0]["DETALLE_FAMILIA"].ToString();
                String _NRO_PIN = clientesService._Numero_pin(TipoUsuario);

                string _ok_ = clientesService.pa_creacion_pines(TipoUsuario, PassTipoUsuario, TipoUsuarioWeb, PassTipoUsuarioWeb,
                TipoUsuarioApp, PassTipoUsuarioApp, usrInfocontable, passInfocontable, usrebookweb, passebookweb, _NRO_PIN, DETALLE_FAMILIA,
                FECHA_FINAL, Convert.ToDouble(idProductos), productosModels.NroContrato, AppData.ProductoId, AppData.ContratoId, AppData.Id);
                if (_ok_ == "OK")
                {
                    string _ok_email_ = SendMail(productosModels.Correo01, _NRO_PIN, DETALLE_FAMILIA, productosModels.Cliente);
                    if (_ok_email_ == "Email Enviado")
                    {
                        name = "Nro PIN fué enviado correctatmente al correo del cliente";
                        dialogIsOpen = true;
                        navigationManager.NavigateTo("/contratos/" + AppData.ProductoId.ToString());
                    }
                }
                else
                {
                    name = _ok_;
                    dialogIsOpen = true;
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            Console.WriteLine("Ejecutando");
        }
    }

    private string SendMail(string _email, string _NRO_PIN, string Producto, string Cliente)
    {
        try
        {
            using (System.Net.Mail.MailMessage mail = new System.Net.Mail.MailMessage())
            {
                mail.From = new System.Net.Mail.MailAddress("activaciondelicencias@gacetajuridica.com.pe");
                mail.To.Add(_email);
                mail.To.Add("mmendoza@gacetajuridica.com.pe");
                mail.Subject = "CODIGO PIN DE : " + Producto;
                mail.Body = "<html>  " +
                "<p align='center'><strong><font color='maroon'>¡NUEVAS PLATAFORMAS PARA HACER MÁS FÁCIL SU TRABAJO!</font></strong></p>" +
                "<br><p><div>Estimado Cliente: " + Cliente + "</div><div>Del producto: " + Producto + "</div></p>" +
                "<p>Reciba de parte de todo el personal de Gaceta Jurídica nuestros afectuosos saludos y nuestros deseos de que usted y su familia se encuentren bien de salud.</p>" +
                "<p><strong>Actualmente nos encontramos trabajando para lanzar –en breve- una nueva y muy innovadora plataforma web. El objetivo es brindarles a nuestros suscriptores un verdadero ecosistema de información y de servicios legales.</strong>Este tipo de contenidos, entre muchos otros, se encontrarán el mismo día que se produzcan en la nueva plataforma, através de diversos módulos ordenados y sistematizados, con herramientas de búsqueda que permitirán su fácil ubicación y procesamiento de trabajo.</p>" +
                "<p><strong>Otra de las grandes novedades es el lanzamiento de una plataforma similar a Netflix que brindará una experiencia de lectura y trabajo sin precedentes en nuestro país.</strong> Ya el hecho de que se pueda leer offline (sin necesidad de internet) indica que estamos entrando al uso de nuevas tecnologías de punta.</p>" +
                "<p><strong><div>IMPORTANTE</div>" +
                "<div>Para acceder a los referidos especiales, le recordamos que su código de suscriptor (PIN) es: [ <font color='red'>" + _NRO_PIN + " </font> ]</div></strong></p>" +
                "<br><p>Atentamente,</p><p><strong><I>GACETA COMERCIAL S.A.</I></strong></p>" +
                "</html>";
                mail.IsBodyHtml = true;
                using (System.Net.Mail.SmtpClient smtp = new System.Net.Mail.SmtpClient("192.168.0.2", 25))
                {
                    smtp.Credentials = new System.Net.NetworkCredential("activaciondelicencias@gacetajuridica.com.pe", "A#gT5g65$A3Fd");
                    //smtp.EnableSsl = true;
                    smtp.Send(mail);
                }
            }
            return "Email Enviado";
        }
        catch (Exception ex)
        {
            return ex.Message;
        }
    }

    private void AccionesPIN(int Accion)
    {
        string _ok_ = "";
        if (Accion == 0) // enviar por correo
        {
            _ok_ = SendMail(productosModels.Correo01, productosModels.NroPin, productosModels.Producto, productosModels.Cliente);
            if (_ok_ == "Email Enviado")
            {
                name = "HOLA: El códgo PIN fué enviado al correo " + productosModels.Correo01;
                dialogIsOpen = true;
            }
            else
            {
                name = "ERROR: " + _ok_;
                dialogIsOpen = true;
            }
        }
        if (Accion == 1) // HAbilitar
        {
            HabilitaDesabilita("1");

        }
        if (Accion == 2) // DeHAbilitar
        {
            HabilitaDesabilita("0");
        }
        if (Accion == 3) // Desvincular
        {
            HabilitaDesabilita("2");
        }
    }

    void HabilitaDesabilita(string _action_)
    {
        string TipoUsuario = "";
        try
        {
            string _msg_ = "";
            if (_action_ == "2")
            {
                _msg_ = "DESVINCULADO";
            }
            else
            {
                _msg_ = (_action_ == "1" ? "Desabilitado?" : "Habilitado");
            }
            System.Data.DataTable dt_ = new System.Data.DataTable();
            dt_ = clientesService.paLeeTipoProducto(AppData.ProductoId).Tables[0];
            if (dt_.Rows.Count > 0)
            {
                TipoUsuario = dt_.Rows[0]["TipoUsuario"].ToString();
                String _NRO_PIN = productosModels.NroPin;

                string _ok_ = clientesService.pa_habilita_desabilita_pines(TipoUsuario, _NRO_PIN,
                    productosModels.NroContrato, AppData.ProductoId, AppData.ContratoId, _action_);
                if (_ok_ == "OK")
                {
                    name = "HOLA: El código PIN fué " + _msg_;
                    dialogIsOpen = true;
                    navigationManager.NavigateTo("/contratos/" + AppData.ProductoId.ToString());
                }
                else
                {
                    name = "HOLA: " + _ok_;
                    dialogIsOpen = true;
                }
            }
        }
        catch (Exception ex)
        {
            name = "HOLA: " + ex.Message.ToString();
            dialogIsOpen = true;
            Console.WriteLine(ex.Message);
        }
        finally
        {
            Console.WriteLine("Ejecutando");
        }
    }

    private void retornar()
    {
        navigationManager.NavigateTo("/contratos/" + AppData.ProductoId.ToString());
    }
}
